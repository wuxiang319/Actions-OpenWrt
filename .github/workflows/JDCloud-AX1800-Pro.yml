#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
###############手动修改##############
name: JDCloud-AX1800-Pro-JiaY-shi

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      TEMP:
        description: 'Show soc status and wifi temperature on luci'
        required: true
        default: true
        type: boolean
      NO_DOCKERMAN:
        description: 'Not build luci-app-dockerman'
        required: true
        default: true
        type: boolean
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
#  schedule:
#    - cron: 0 16 * * *

env:
  ###############手动修改##############
  OPENWRT_NAME: JiaY-shi
  REPO_URL: https://github.com/JiaY-shi/openwrt
  REPO_BRANCH: ipq60xx-devel_nss
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: JDCloud-AX1800-Pro/.config
  DIY_P1_SH: JDCloud-AX1800-Pro/diy-part1.sh
  DIY_P2_SH: JDCloud-AX1800-Pro/diy-part2.sh
  SSH_ACTIONS: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    permissions:
      contents: write
    
    steps:
    - name: 检查项目分支
      uses: actions/checkout@main
      
    # ... (其他步骤省略) ...
        
    - name: 生成固件Release标签
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        touch release.txt
        echo "- 使用源码：${{ env.REPO_URL }}" >> release.txt
        echo "- 登录地址：${{ env.IP_ADDR }}" >> release.txt
        echo "- 注意AX1800规格的5G无线不支持160MHz频宽" >> release.txt
        if [[ "${{ env.SHOW_TEMP }}" == '-show_temp' ]]; then
                echo "- 显示CPU状态和无线温度" >> release.txt
        else
                echo "- 不显示CPU状态和无线温度" >> release.txt
        fi
        if [[ "${{ env.BUILD_DOCKERMAN }}" == '-docker' ]]; then
                echo "- 已编译luci-app-dockerman" >> release.txt
        else
                echo "- 未编译luci-app-dockerman" >> release.txt
        fi
        echo "release_tag=${{ env.FILE_DATE }}-${{ env.OPENWRT_NAME }}-${{ env.DEVICE_NAME }}${{ env.BUILD_DOCKERMAN }}" >> $GITHUB_OUTPUT
        
    - name: 发布固件至Release
      uses: softprops/action-gh-release@master
      if: steps.tag.outputs.release_tag && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ env.FIRMWARE }}/*
        name: ${{ steps.tag.outputs.release_tag }}
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
